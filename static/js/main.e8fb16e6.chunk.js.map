{"version":3,"sources":["assets/images/Screenshot (162).png","assets/images/Screenshot (163).png","assets/images/Screenshot (164).png","assets/images/Screenshot (165).png","assets/images/Screenshot (166).png","components/quiz/QuizInstructions.js","components/Home.js","utils/is-empty.js","utils/get-random.js","components/quiz/Play.js","components/quiz/QuizSummary.js","components/Login.js","components/Register.js","App.js","index.js"],"names":["module","exports","QuizInstructions","props","temp","JSON","stringify","location","aboutProps","obj","parse","Helmet","className","text","src","img","width","height","alt","img1","img2","img3","img4","to","Home","id","pathname","isEmpty","value","undefined","Object","keys","length","trim","Random","Math","floor","random","Play","displayQuestions","questions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","handlepreviousQuestion","prevState","clicked","changeColor","handlequit","window","confirm","history","push","handlenextQuestion","endGame","handleOptionClick","e","target","innerHTML","correctAnswer","document","getElementById","style","background","wrongAnswer","score","correctAnswers","numberOfAnsweredQuestions","wrongAnswers","alert","playerStats","numberOfQuestions","setTimeout","questionsarr","this","question","onClick","optionA","optionB","optionC","optionD","Component","QuizSummary","stats","remark","toFixed","Login","useState","setText","password","setPassword","type","name","onChange","Register","retypepassword","retypesetPassword","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e8fb16e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Screenshot (162).77265175.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (163).141d3db5.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (164).82f90a6f.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (165).0701dc65.png\";","module.exports = __webpack_public_path__ + \"static/media/Screenshot (166).080a62a8.png\";","import React, { Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\nimport img from '../../assets/images/Screenshot (162).png'\r\nimport img1 from '../../assets/images/Screenshot (163).png'\r\nimport img2 from '../../assets/images/Screenshot (164).png'\r\nimport img3 from '../../assets/images/Screenshot (165).png'\r\nimport img4 from '../../assets/images/Screenshot (166).png'\r\n\r\nconst QuizInstructions =(props)=>{\r\n    const temp=JSON.stringify(props.location.aboutProps);\r\n    const obj=JSON.parse(temp);\r\n    return(\r\n    <Fragment>\r\n    <Helmet><titl>Quiz Instructions</titl></Helmet>\r\n    <div className=\"instructions container\">\r\n      <h5>Hi! {obj.text}</h5>\r\n        <h1>How to play the game</h1>\r\n    <p>Ensure you read this guide from start to finish</p>\r\n    <ul>\r\n        <li>Every question haas four options</li>\r\n        <li>Quiz has 10 questions</li>\r\n    </ul>\r\n    <br></br>\r\n    <p>Interface for playing quiz</p>\r\n    <img src={img} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n    <p>If you click the wrong answer then it displays red in colour</p>\r\n     <img src={img1} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n     <p>If you click the right answer then it displays green in colour</p>\r\n      <img src={img2} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n      <p>If you want to exit the quiz then you can use quit option below, then it asks for conformation and then it is redirected to home page</p>\r\n       <img src={img3} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n    <p>At last after completion of the quiz, score will be displayed as shown in the figure</p>\r\n       <img src={img4} width=\"1000px\" height=\"500px\" alt=\"img\"/>\r\n    <div>\r\n        <span className=\"left\"><Link to=\"/\"> Take me back</Link></span>\r\n        <span className=\"right\"><Link to=\"/play/quiz\"> Next</Link></span>\r\n    </div>\r\n    </div>\r\n    </Fragment>\r\n    );\r\n};\r\nexport default QuizInstructions;","import React, { Fragment } from 'react';\r\nimport {Helmet } from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return (\r\n       <Fragment>\r\n           <Helmet><title>quiz</title></Helmet>\r\n           <div id=\"home\">\r\n               <section>\r\n                   \r\n                   <h1> Lets Play Quiz! </h1>\r\n                  \r\n                   <div className=\"play-button-container\">\r\n                       <ul>\r\n                           <li >\r\n                               <Link className=\"play-button\" to={{pathname:\"/play/instructions/\",aboutProps:{text:\"User\"}}} >\r\n                                   Play\r\n                               </Link>\r\n                           </li>\r\n                       </ul>\r\n\r\n                   </div>\r\n                   <div className=\"auth-container\">\r\n                       <Link className=\"auth-buttons\" id=\"login-button\" to=\"/login\">Login</Link>\r\n                       <Link  className=\"auth-buttons\" id=\"signup-button\" to=\"/register\">Register</Link>\r\n                   </div>\r\n               </section>\r\n           </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Home;\r\n","const isEmpty =(value)=> \r\n value=== undefined ||\r\n value==null || \r\n (typeof value === 'object' && Object.keys(value).length===0)||\r\n (typeof value === 'string' && value.trim().length===0)\r\n\r\n export default isEmpty;","// import React from 'react';\r\nfunction Random() {\r\n    var randomNumber = Math.floor(Math.random() * Math.floor(3));\r\n   return randomNumber;\r\n  }\r\n  export default Random;","import React,{Component, Fragment} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport questionsarr from '../../questions.json';\r\nimport isEmpty from '../../utils/is-empty';\r\nimport Random from '../../utils/get-random';\r\n// import M from 'materialize-css';\r\nclass Play extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            clicked:false,\r\n           questions:questionsarr[Random()],\r\n           currentQuestion:{},\r\n           nextQuestion:{},\r\n           previousQuestion:{},\r\n           answer:'',\r\n           numberOfQuestions:10,\r\n           numberOfAnsweredQuestions:0,\r\n           currentQuestionIndex:0,\r\n           score:0,\r\n           correctAnswers:0,\r\n           wrongAnswers:0\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        const {questions,currentQuestion,nextQuestion,previousQuestion} = this.state;\r\n        this.displayQuestions(questions,currentQuestion,nextQuestion,previousQuestion);\r\n    }\r\n    displayQuestions =(questions =this.state.questions,currentQuestion,nextQuestion,previousQuestion)=>{\r\n         \r\n        let {currentQuestionIndex}=this.state;\r\n        if(!isEmpty(this.state.questions)){\r\n            questions=this.state.questions;\r\n            currentQuestion=questions[currentQuestionIndex];\r\n            nextQuestion=questions[currentQuestionIndex+1];\r\n            previousQuestion=questions[currentQuestionIndex-1];\r\n            const answer=currentQuestion.answer;\r\n            this.setState({\r\n                currentQuestion,\r\n                nextQuestion,\r\n                previousQuestion,\r\n                answer\r\n            });\r\n        }\r\n    };\r\n    changeColor(){\r\n        document.getElementById(\"op1\").style.background= '#1da1f2';\r\n        document.getElementById(\"op2\").style.background= '#1da1f2';\r\n        document.getElementById(\"op3\").style.background= '#1da1f2';\r\n        document.getElementById(\"op4\").style.background= '#1da1f2';\r\n    }\r\n    handlepreviousQuestion =()=>{\r\n        this.setState(prevState=>({\r\n            clicked:false\r\n        }));\r\n        if(this.state.previousQuestion!== undefined){\r\n            this.changeColor();\r\n            this.setState(prevState=>({\r\n                currentQuestionIndex: prevState.currentQuestionIndex-1,\r\n            }),()=>{\r\n                this.displayQuestions(this.state.state,this.state.currentQuestion,this.state.nextQuestion,this.state.previousQuestion);\r\n            });\r\n            \r\n        } \r\n    }\r\n    handlequit =()=>{\r\n        if(window.confirm('Are you sure want to Quit?')){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    handlenextQuestion= ()=>{\r\n        this.setState(prevState=>({\r\n            clicked:false\r\n        }));\r\n        if(this.state.nextQuestion!== undefined){\r\n        this.changeColor();\r\n        this.setState(prevState=>({\r\n            currentQuestionIndex: prevState.currentQuestionIndex+1,\r\n        }), () =>{\r\n            \r\n            this.displayQuestions(this.state.state,this.state.currentQuestion,this.state.nextQuestion,this.state.previousQuestion);\r\n             \r\n        });\r\n    }\r\n    else{\r\n        this.endGame();\r\n    }   \r\n    }\r\n    handleOptionClick = (e) => {\r\n        if(this.state.clicked===false){\r\n        if(e.target.innerHTML === this.state.answer){\r\n            this.correctAnswer();\r\n             document.getElementById(e.target.id).style.background= 'green';\r\n        }\r\n        else{\r\n            this.wrongAnswer();\r\n           document.getElementById(e.target.id).style.background= 'red';\r\n        }\r\n        this.setState(prevState=>({\r\n            clicked:!prevState.clicked\r\n        }));\r\n    }\r\n    // console.log(this.state.clicked);\r\n    }\r\n    correctAnswer = () =>{\r\n        this.setState(prevState =>({\r\n            score:prevState.score + 1,\r\n            correctAnswers: prevState.correctAnswers+1,\r\n            // currentQuestionIndex: prevState.currentQuestionIndex+1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions+1,\r\n        }));\r\n    }\r\n    wrongAnswer = () =>{\r\n        this.setState(prevState =>({\r\n            wrongAnswers: prevState.wrongAnswers+1,\r\n            // currentQuestionIndex: prevState.currentQuestionIndex+1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions+1,\r\n        }));\r\n    }\r\n    endGame =() =>{\r\n        alert(\"Quiz has ended!\");\r\n        const {state}=this;\r\n        const playerStats={\r\n            score:state.score,\r\n            numberOfQuestions:state.numberOfQuestions,\r\n            correctAnswers:state.correctAnswers,\r\n            wrongAnswers:state.wrongAnswers,\r\n            numberOfAnsweredQuestions:state.numberOfAnsweredQuestions,\r\n        };\r\n        // console.log(playerStats);\r\n        setTimeout(()=>{\r\n            this.props.history.push(\"/play/quizSummary\",playerStats);\r\n        },1000);\r\n    }\r\n    render(){\r\n        const {currentQuestion}=this.state;\r\n        return(\r\n            <Fragment>\r\n                <Helmet><title>Quiz Page</title></Helmet>\r\n                <div className=\"questions\">\r\n                    <h3>Quiz</h3>\r\n                    <div>\r\n                        <p>\r\n                            <span >{this.state.currentQuestionIndex+1} of 10</span>\r\n                        </p>\r\n                    </div>\r\n                    <h5>{currentQuestion.question}</h5>\r\n                    <div className=\"options-container\">\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op1\">{currentQuestion.optionA}</p>\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op2\">{currentQuestion.optionB}</p>\r\n                    </div>\r\n                    <div className=\"options-container\">\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op3\">{currentQuestion.optionC}</p>\r\n                        <p onClick={this.handleOptionClick} className=\"option\" id=\"op4\">{currentQuestion.optionD}</p>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button onClick={this.handlepreviousQuestion}>Previous</button>\r\n                        <button onClick={this.handlenextQuestion}>Next</button>\r\n                        <button onClick={this.handlequit}>Quit</button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Play;","import React,{Component, Fragment} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\n class QuizSummary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           numberOfQuestions:10,\r\n           numberOfAnsweredQuestions:0,\r\n           score:0,\r\n           correctAnswers:0,\r\n           wrongAnswers:0\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        const {state} = this.props.location;\r\n        if(state){\r\n        this.setState({\r\n            score:(state.score/state.numberOfQuestions) *100,\r\n            numberOfQuestions:10,\r\n           numberOfAnsweredQuestions:state.numberOfAnsweredQuestions,\r\n           correctAnswers:state.correctAnswers,\r\n           wrongAnswers:state.wrongAnswers\r\n        });\r\n        }\r\n    }\r\n     render(){\r\n       const {state}=this.props.location;\r\n       let stats,remark;\r\n       if(this.state.score<=30){\r\n        remark='You need to practice more!';\r\n       }else if(this.state.score >30 && this.state.score<=50){\r\n           remark='Better luck next Time!';\r\n       }else if(this.state.score> 50 && this.state.score<=70){\r\n           remark='Can do better!';\r\n       }else if(this.state.score>70 && this.state.score<=85){\r\n           remark='You did Great!';\r\n       }else if(this.state.score>85){\r\n           remark='You are genius!';\r\n       }\r\n       if(state!==undefined){\r\n           stats=(\r\n               <Fragment>\r\n            <h1 className=\"heading\">Quiz has ended</h1>\r\n            <div className=\"container\">\r\n                <h4>{remark}</h4>\r\n                <h2>Your Score: {this.state.score.toFixed(0)}</h2>\r\n                <span className=\"stat left\"> Number of Questions:</span>\r\n                <span className=\"stat right\"> {this.state.numberOfQuestions}</span><br></br>\r\n                <span className=\"stat left\"> Number of Answered Questions:</span>\r\n                <span className=\"stat right\"> {this.state.numberOfAnsweredQuestions}</span><br></br>\r\n                <span className=\"stat left\"> Number of Correct Answeres:</span>\r\n                <span className=\"stat right\"> {this.state.correctAnswers}</span><br></br>\r\n                <span className=\"stat left\"> Number of Wrong Answers:</span>\r\n                <span className=\"stat right\"> {this.state.wrongAnswers}</span><br></br>\r\n                \r\n                \r\n            </div>\r\n            <section className=\"button-container\">\r\n                <span><Link className=\"return-button\"to=\"/\">Return back</Link></span>\r\n                <span><Link className=\"play-button\" to=\"/play/quiz\">Play Again</Link></span>\r\n            </section>\r\n            </Fragment>\r\n           );\r\n       }\r\n         return (\r\n           <Fragment>\r\n               <Helmet><title>Quiz Summary</title></Helmet>\r\n               {stats}\r\n           </Fragment>\r\n         );\r\n     }\r\n }\r\n export default QuizSummary;","import React,{Fragment, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\n// import ReactToExcel from 'react-html-table-to-excel';\r\n// import Spreadsheet from 'react-spreadsheet';\r\n\r\n\r\n// import XLSX from ;\r\n\r\nconst Login =()=>{\r\n    const [text, setText] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    function validateForm() {\r\n        return (text.length > 0 && password.length > 0);\r\n      }\r\n    \r\n    return (\r\n        <Fragment>\r\n        \r\n            <Helmet><title>login page</title></Helmet>\r\n            <h2>Login</h2>\r\n            <form className=\"login-container\" >\r\n            {/* <table id=\"table-to-xls\"> */}\r\n            \r\n                User Name:\r\n                <input type=\"text\" name=\"text\" value={text} onChange={e => setText(e.target.value)}/>\r\n                \r\n                \r\n                Password:\r\n                <span className=\"tr\"><input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}/></span>\r\n               \r\n            {/* </table> */}\r\n            <Link to={validateForm()?{ pathname:\"/play/instructions/\",aboutProps:{text}} : {pathname:\"/login\"}}  className=\"submit-button\"  type=\"submit\" value=\"submit\" >Submit</Link>\r\n            </form>\r\n            {/* <ReactToExcel\r\n                table=\"table\"\r\n                filename=\"excelfiles\"\r\n                sheet=\"sheet 1\"\r\n                buttonText=\"export\"\r\n            /> */}\r\n        </Fragment>\r\n    );\r\n   \r\n};\r\nexport default Login;","import React,{Fragment ,useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\nconst Register =()=>{\r\n    const [text, setText] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [retypepassword, retypesetPassword] = useState(\"\");\r\n    function validateForm() {\r\n        return text.length > 0 && password.length > 0;\r\n      }\r\n    return (\r\n        <Fragment>\r\n            <Helmet><title>register page</title></Helmet>\r\n            <h2>Register</h2>\r\n            <form className=\"login-container\">\r\n            <label>\r\n                User Name:\r\n                <input type=\"text\" value={text} onChange={e => setText(e.target.value)} name=\"name\" />\r\n                Mail id:\r\n                <input type=\"email\" name=\"mail\" />\r\n                Set Password:\r\n                <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} name=\"password\" />\r\n                Retype Password: \r\n                <input type=\"password\" value={retypepassword} onChange={e => retypesetPassword(e.target.value)}name=\"password\" />\r\n            </label>\r\n            <Link to={validateForm()?{ pathname:\"/play/instructions/\",aboutProps:{text}} : {pathname:\"/register\"} } className=\"submit-button\"  type=\"submit\" value=\"Submit\" >Submit</Link>            </form>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default Register;","import React from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport QuizInstructions from './components/quiz/QuizInstructions';\nimport Home from './components/Home';\nimport Play from './components/quiz/Play';\nimport QuizSummary from './components/quiz/QuizSummary';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/play/instructions\" exact component={QuizInstructions}/>\n      <Route path=\"/play/quiz\" exact component={Play}/>\n      <Route path=\"/play/quizSummary\" exact component={QuizSummary}/>\n      <Route path=\"/login\" exact component={Login}/>\n      <Route path=\"/register\" exact component={Register}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\nimport '../node_modules/@mdi/font/css/materialdesignicons.min.css';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\nimport '../node_modules/materialize-css/dist/js/materialize.min.js';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}